{"version":3,"sources":["app.js"],"names":["root","document","querySelector","fetchData","url","fetch","then","response","ok","json","catch","err","console","error","beautifyPrice","price","String","length","replace","match","makeHouseCard","title","type","address","typeClass","renderHouses","data","searchTerm","filter","elem","RegExp","test","forEach","insertAdjacentHTML","getData","async","localStorage","setItem","JSON","stringify","log","setCookie","name","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","cookie","getCookie","matches","decodeURIComponent","undefined","render","secure","max-age","parse","getItem","getElementById","filterHandler","e","target","innerHTML","addEventListener"],"mappings":"AAAA,MAAMA,KAAOC,SAASC,cAAc,iBAE9BC,UAAYC,GACTC,MAAMD,GAAKE,KAAKC,IACrB,IAAKA,EAASC,GACZ,MAAMD,EAGR,OAAOA,EAASE,SACfH,KAAKG,GACCA,GACNC,MAAMC,IACPC,QAAQC,MAAMF,KAIZG,cAAgBC,GAChBC,OAAOD,GAAOE,OAAS,GAClB,GAAGF,GAAQG,QAAQ,QAAS,IAAIA,QAAQ,IAAKC,GAAS,IAAMA,GAAOD,QAAQ,SAAUC,GAAS,IAAMA,GAGtGJ,EAGHK,cAAgB,EACpBC,MAAAA,EACAN,MAAAA,EACAO,KAAAA,EACAC,QAAAA,MAEA,IAAIC,EAAY,qBAQhB,MANa,qBAATF,IACFE,EAAY,4BAKP,+dAQiCA,KAAaF,6LAICD,wEACOE,gFACGT,cAAcC,6PAW1EU,aAAe,CAACzB,EAAM0B,EAAMC,KAChCD,EAAKE,OAAOC,GACI,IAAIC,OAAOH,EAAY,KACxBI,KAAKF,EAAKR,QACtBW,QAAQH,IACT7B,EAAKiC,mBAAmB,YAAab,cAAcS,OAIjDK,QAAUC,UACd,MAAMT,QAvEUtB,EAuEa,oDAtEtBC,MAAMD,GAAKE,KAAKC,IACrB,IAAKA,EAASC,GACZ,MAAMD,EAGR,OAAOA,EAASE,SACfH,KAAKG,GACCA,GACNC,MAAMC,IACPC,QAAQC,MAAMF,MAVAP,IAAAA,EAwEhBgC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUb,IAC9Cd,QAAQ4B,IAAId,GACZD,aAAazB,KAAM0B,IAGfe,UAAY,CAACC,EAAMC,EAAOC,EAAU,OACxCA,EAAU,CACRC,KAAM,OAEHD,IAGOE,mBAAmBC,OAC7BH,EAAQE,QAAUF,EAAQE,QAAQE,eAGpC,IAAIC,EAAgBC,mBAAmBR,GAAQ,IAAMQ,mBAAmBP,GAExE,IAAK,IAAIQ,KAAaP,EAAS,CAC7BK,GAAiB,KAAOE,EACxB,IAAIC,EAAcR,EAAQO,IAEN,IAAhBC,IACFH,GAAiB,IAAMG,GAI3BnD,SAASoD,OAASJ,GAGdK,UAAYZ,IAChB,IAAIa,EAAUtD,SAASoD,OAAOlC,MAAM,IAAIW,OAAO,WAAaY,EAAKxB,QAAQ,+BAAgC,QAAU,aACnH,OAAOqC,EAAUC,mBAAmBD,EAAQ,SAAME,GAG9CC,OAAS/B,IACb,IAAK2B,UAAU,UAOb,OANAb,UAAU,UAAU,EAAM,CACxBkB,QAAQ,EACRC,UAAW,YAGb1B,UAIFT,aAAazB,KAAMsC,KAAKuB,MAAMzB,aAAa0B,QAAQ,WAAYnC,IAGjE+B,SACA,MAAM9B,OAAS3B,SAAS8D,eAAe,UAEjCC,cAAgBC,IACpB,MAAMC,EAASD,EAAEC,OACjBtD,QAAQ4B,IAAI0B,EAAOvB,OACnB3C,KAAKmE,UAAY,GACjBT,OAAOQ,EAAOvB,QAGhBf,OAAOwC,iBAAiB,QAASJ","file":"app.min.js","sourcesContent":["const root = document.querySelector('.houses__list');\n\nconst fetchData = url => {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(json => {\n    return json;\n  }).catch(err => {\n    console.error(err);\n  });\n};\n\nconst beautifyPrice = price => {\n  if (String(price).length > 3) {\n    return `${price}`.replace(/\\.|,/g, '').replace(/./, match => '£' + match).replace(/\\d{3}$/, match => ',' + match);\n  }\n\n  return price;\n};\n\nconst makeHouseCard = ({\n  title,\n  price,\n  type,\n  address\n}) => {\n  let typeClass = 'house-card__label ';\n\n  if (type === \"SupportAvailable\") {\n    typeClass = 'house-card__label-orange';\n  } // typeClass = typeClass.toString().replace(/,/g, ' ')\n  // console.log(typeClass);\n\n\n  return `\n        <article class=\"houses__house house-card\">\n            <div class=\"house-card__wrapper\">\n                <div class=\"house-card__content\">\n                    <header class=\"house-card__header\">\n                        <figure class=\"house-card__figure\">\n                            <img class=\"house-card__img\" src=\"https://source.unsplash.com/400x300/?house\"\n                                 alt=\"house footer sale\">\n                            <span class=${typeClass}>${type}</span>\n                        </figure>\n                    </header>\n                    <section class=\"house-card__body\">\n                        <h2 class=\"house-card__title\">${title}</h2>\n                        <address class=\"house-card__address\">${address}</address>\n                        <p>New Properties for Sale from <strong>${beautifyPrice(price)}</strong></p>\n                    </section>\n                </div>\n                <footer class=\"house-card__footer\">\n                        Shared Ownership Available\n                </footer>\n            </div>\n        </article>\n    `;\n};\n\nconst renderHouses = (root, data, searchTerm) => {\n  data.filter(elem => {\n    const regex = new RegExp(searchTerm, 'i');\n    return regex.test(elem.title);\n  }).forEach(elem => {\n    root.insertAdjacentHTML('beforeend', makeHouseCard(elem));\n  });\n};\n\nconst getData = async () => {\n  const data = await fetchData('https://603e38c548171b0017b2ecf7.mockapi.io/homes');\n  localStorage.setItem('houses', JSON.stringify(data));\n  console.log(data);\n  renderHouses(root, data);\n};\n\nconst setCookie = (name, value, options = {}) => {\n  options = {\n    path: '/',\n    // при необходимости добавить другие значения по умолчанию\n    ...options\n  };\n\n  if (options.expires instanceof Date) {\n    options.expires = options.expires.toUTCString();\n  }\n\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n  for (let optionKey in options) {\n    updatedCookie += \"; \" + optionKey;\n    let optionValue = options[optionKey];\n\n    if (optionValue !== true) {\n      updatedCookie += \"=\" + optionValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n};\n\nconst getCookie = name => {\n  let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n};\n\nconst render = searchTerm => {\n  if (!getCookie('houses')) {\n    setCookie('houses', true, {\n      secure: true,\n      'max-age': 3600\n    }); //на 1 час\n\n    getData();\n    return;\n  }\n\n  renderHouses(root, JSON.parse(localStorage.getItem('houses')), searchTerm);\n};\n\nrender();\nconst filter = document.getElementById('filter');\n\nconst filterHandler = e => {\n  const target = e.target;\n  console.log(target.value);\n  root.innerHTML = '';\n  render(target.value);\n};\n\nfilter.addEventListener('input', filterHandler);"]}