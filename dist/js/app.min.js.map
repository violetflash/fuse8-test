{"version":3,"sources":["app.js"],"names":["root","document","querySelector","fetchData","url","fetch","then","response","ok","json","catch","err","console","error","beautifyPrice","price","String","length","replace","match","makeHouseCard","title","type","address","index","cardCounter","src","body","clientWidth","typeClass","cardClass","renderHouses","data","searchTerm","houses","filter","elem","RegExp","test","forEach","insertAdjacentHTML","getData","async","localStorage","setItem","JSON","stringify","log","setCookie","name","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","cookie","getCookie","matches","decodeURIComponent","undefined","render","secure","max-age","parse","getItem","getElementById","scrollElements","filterHandler","e","target","innerHTML","querySelectorAll","addEventListener","throttleTimer","throttle","callback","time","setTimeout","elementInView","percentageScroll","elemTop","getBoundingClientRect","top","window","innerHeight","documentElement","clientHeight","setSrc","tempAttr","newAttr","getAttribute","displayElement","element","classList","add","handleScrollAnimation"],"mappings":"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","file":"app.min.js","sourcesContent":["const root = document.querySelector('.houses__list');\n\nconst fetchData = url => {\n  return fetch(url).then(response => {\n    if (!response.ok) {\n      throw response;\n    }\n\n    return response.json();\n  }).then(json => {\n    return json;\n  }).catch(err => {\n    console.error(err);\n  });\n};\n\nconst beautifyPrice = price => {\n  if (String(price).length > 3) {\n    return `${price}`.replace(/\\.|,/g, '').replace(/./, match => '£' + match).replace(/\\d{3}$/, match => ',' + match);\n  }\n\n  return price;\n};\n\nconst makeHouseCard = ({\n  title,\n  price,\n  type,\n  address\n}, index) => {\n  let cardCounter = 6;\n  let src = '#';\n\n  if (document.body.clientWidth < 1200) {\n    cardCounter = 4;\n  }\n\n  if (document.body.clientWidth < 650) {\n    cardCounter = 2;\n  }\n\n  if (index < cardCounter) {\n    src = 'https://source.unsplash.com/400x300/?house';\n  } // const cardCounter = document.body.clientWidth < 650 ? 2 :\n  //     document.body.clientWidth < 1200 ? 4\n  //         : 6\n\n\n  let typeClass = 'house-card__label ';\n\n  if (type === \"SupportAvailable\") {\n    typeClass = 'house-card__label-orange';\n  }\n\n  let cardClass = 'houses__house house-card';\n\n  if (index >= cardCounter) {\n    cardClass = 'houses__house house-card scroll-element js-scroll fade-in-bottom';\n  } // const src = '#';\n  // typeClass = typeClass.toString().replace(/,/g, ' ')\n  // console.log(typeClass);\n\n\n  return `\n        <article class='${cardClass}'>\n            <div class=\"house-card__wrapper\">\n                <div class=\"house-card__content\">\n                    <header class=\"house-card__header\">\n                        <figure class=\"house-card__figure\">\n                            <img id=\"lazy-img\" class=\"house-card__img\" data-src=\"https://source.unsplash.com/400x300/?house\" src=\"${src}\"\n                                 alt=\"${title}\" loading=\"lazy\">\n                            <span class=${typeClass}>${type}</span>\n                        </figure>\n                    </header>\n                    <section class=\"house-card__body\">\n                        <h2 class=\"house-card__title\">${title}</h2>\n                        <address class=\"house-card__address\">${address}</address>\n                        <p>New Properties for Sale from <strong>${beautifyPrice(price)}</strong></p>\n                    </section>\n                </div>\n                <footer class=\"house-card__footer\">\n                        Shared Ownership Available\n                </footer>\n            </div>\n        </article>\n    `;\n};\n\nconst renderHouses = (root, data, searchTerm) => {\n  let houses = data;\n\n  if (searchTerm.length > 2) {\n    houses = data.filter(elem => {\n      const regex = new RegExp(searchTerm, 'i');\n      return regex.test(elem.title);\n    });\n  }\n\n  houses.forEach((elem, index) => {\n    root.insertAdjacentHTML('beforeend', makeHouseCard(elem, index));\n  });\n};\n\nconst getData = async () => {\n  const data = await fetchData('https://603e38c548171b0017b2ecf7.mockapi.io/homes');\n  localStorage.setItem('houses', JSON.stringify(data));\n  console.log(data);\n  renderHouses(root, data);\n};\n\nconst setCookie = (name, value, options = {}) => {\n  options = {\n    path: '/',\n    // при необходимости добавить другие значения по умолчанию\n    ...options\n  };\n\n  if (options.expires instanceof Date) {\n    options.expires = options.expires.toUTCString();\n  }\n\n  let updatedCookie = encodeURIComponent(name) + \"=\" + encodeURIComponent(value);\n\n  for (let optionKey in options) {\n    updatedCookie += \"; \" + optionKey;\n    let optionValue = options[optionKey];\n\n    if (optionValue !== true) {\n      updatedCookie += \"=\" + optionValue;\n    }\n  }\n\n  document.cookie = updatedCookie;\n};\n\nconst getCookie = name => {\n  let matches = document.cookie.match(new RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"));\n  return matches ? decodeURIComponent(matches[1]) : undefined;\n};\n\nconst render = (searchTerm = '') => {\n  if (!getCookie('houses')) {\n    setCookie('houses', true, {\n      secure: true,\n      'max-age': 3600\n    }); //на 1 час\n\n    getData();\n    return;\n  }\n\n  renderHouses(root, JSON.parse(localStorage.getItem('houses')), searchTerm);\n};\n\nrender();\nconst filter = document.getElementById('filter');\nlet scrollElements;\n\nconst filterHandler = e => {\n  const target = e.target; // if (target.value.length < 3) return;\n\n  root.innerHTML = '';\n  render(target.value);\n  scrollElements = document.querySelectorAll('.js-scroll');\n};\n\nfilter.addEventListener('input', filterHandler);\nscrollElements = document.querySelectorAll('.js-scroll');\nlet throttleTimer = false;\n\nconst throttle = (callback, time) => {\n  //don't run the function while throttle timer is true\n  if (throttleTimer) return; //first set throttle timer to true so the function doesn't run\n\n  throttleTimer = true;\n  setTimeout(() => {\n    //call the callback function in the setTimeout and set the throttle timer to false after the indicated time has passed\n    callback();\n    throttleTimer = false;\n  }, time);\n};\n\nconst elementInView = (elem, percentageScroll = 100) => {\n  const elemTop = elem.getBoundingClientRect().top;\n  return (elemTop <= window.innerHeight || elemTop <= document.documentElement.clientHeight) * (percentageScroll / 100);\n};\n\nconst setSrc = (root, target, tempAttr, newAttr) => {\n  const elem = root.querySelector(target);\n  elem.src = elem.getAttribute(tempAttr);\n};\n\nconst displayElement = element => {\n  element.classList.add(\"scrolled\");\n  setSrc(element, '.house-card__img', 'data-src');\n};\n\nconst handleScrollAnimation = () => {\n  scrollElements.forEach(elem => {\n    if (elementInView(elem, 100)) {\n      displayElement(elem);\n    }\n  });\n};\n\nwindow.addEventListener('scroll', () => {\n  throttle(handleScrollAnimation, 250);\n});"]}